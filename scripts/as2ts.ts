/*
  as2ts: Convert AssemblyScript sources to be valid TypeScript.
*/

import * as fs from "node:fs"
import { basename } from "node:path"

const sources = ["../assembly/lbfgs.ts", "../assembly/asopt.ts"]

const replacements: [RegExp, string][] = [
  [/@inline const/g, "const"],
  [/(import [^\n]+ from) ".\/util"/, '$1 "../src/core/asinterop"'],
  [/(import [^\n]+ from) ".\/types"/, '$1 "../src/core/asinterop"'],
]

const scriptRel = (p: string) => new URL(p, import.meta.url)

function rewrite(filename: string) {
  const input = fs.readFileSync(scriptRel(filename), "utf-8")
  let output = replacements.reduce(
    (acc: string, [patt, repl]) => acc.replace(patt, repl),
    input,
  )
  output =
    `// Autogenerated from ${filename} by ${basename(import.meta.url)}\n\n` +
    output
  fs.writeFileSync(scriptRel(`../build/${basename(filename)}`), output, "utf-8")
}

sources.forEach(rewrite)
